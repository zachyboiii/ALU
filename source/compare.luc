module compare (
    input z,
    input v,
    input n,
    input alufn[6],
    output cmp
) {
    
    always {
        case (alufn[2:1]){ // checks alufn bit 1 and 2
            b01: cmp = z //  if bit 2 and 1 is 0 and 1 
            b10: cmp = n ^ v // if bit 2 and 1 is 1 and 0
            b11: cmp = z | (n ^ v) // if bit 2 and 1 are both 1
            default:  cmp = 0
        }
        
    }
}