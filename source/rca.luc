// A ripple-carry-adder combinational logic unit
// rca.luc
module rca #( // Parameter SIZE
    SIZE ~ 32 : SIZE >1
)(
    input a[SIZE],
    input b[SIZE],
    input cin,
    output s[SIZE]
  ) {

  fa fa[SIZE]; // instantiate full adder

  always {

    fa.a = a
    fa.b = b
    fa.cin = 0;
    
    repeat(i, SIZE){ // repeat for each bit of a and b
        if (i == 0){
            fa.cin[0] = cin
        }
        else{
            fa.cin[i] = fa.cout[i-1]
        }
    }
      
    s = fa.s; // connect the output bits
  }
}